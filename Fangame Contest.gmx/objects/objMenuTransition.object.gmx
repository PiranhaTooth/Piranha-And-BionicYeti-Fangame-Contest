<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>titleObject[0] = objTitle;
titleObject[1] = objMenuPortal;
titleObject[2] = objMenuPortalParticle;
titleObject[3] = objMenuKid;
titleObject[4] = objSelector;

timer = 0;
viewSpd = 1.01;
lerping = false;
starNumber = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///lerp objects off the screen
timer += 1;

if room = rTitle and instance_exists(objDifficultySelect)
{
    for(var i = 0; i &lt; array_length_1d(titleObject); i++)
    {
        with titleObject[i]
        {
            if x &lt;= 400
            {
                x = lerp(x,-500,0.05);
            }
            if x &gt; 400
            {
                x = lerp(x,1500, 0.05);
            }
        }
    }
    for(var i = 0; i &lt; array_length_1d(objDifficultySelect.xx); i++)
    {
        with objDifficultySelect
        {
            xx[i] = lerp(xx[i],-2150,0.025);
        }
    }
    
    with all
    {
        if x &lt; -400 or x &gt; 1400
        {
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///pan up and text
if room = rTitle
{
    if timer = 15
    {
        room_goto(rNewGameCinematic);
    }
}

if room = rNewGameCinematic
{
    if timer &gt; 20 
    {
        view_yview[0] -= viewSpd
        if view_yview &lt; 0
        {
            view_yview[0] = 0;
        }
        if view_yview[0] != 0 and lerping = false
        {
            if viewSpd &lt; 18
            {
                viewSpd *= 1.02;
            }
            else
            {
                lerping = true;
            }
        }
    }
    if lerping = true
    {
        viewSpd = lerp(viewSpd,0,0.05);
        if !audio_is_playing(musNewGameCinematic)
        {
            audio_play_sound(musNewGameCinematic,10,true);
        }
    }
    
    if timer &gt; 260
    {
        if timer mod 30 = 0
        {
            if starNumber mod 2 == 1
            {
                instance_create(irandom_range(32,368),irandom_range(16,352),objStar)
            }
            if starNumber mod 2 == 0
            {
                instance_create(irandom_range(432,568),irandom_range(16,352),objStar)
            }
            starNumber ++;
        }
    }
    if timer = 360
    {
        objTextbox.npc = 2;
    }
    
    if objTextbox.interact = true
    {
        timer = 0;
        viewSpd = 1;
        lerping = false;
        room_goto(rNewGameCinematic2);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///pan down

if room = rNewGameCinematic2
{
    if timer &gt; 20 
    {
        view_yview[0] += viewSpd
        if view_yview[0] &gt; 1216
        {
            view_yview[0] = 1216;
        }
        if view_yview[0] != 1216 and lerping = false
        {
            if viewSpd &lt; 18
            {
                viewSpd *= 1.02;
            }
            else
            {
                lerping = true;
            }
        }
    }
    if lerping = true
    {
        viewSpd = lerp(viewSpd,0,0.05);
        audio_sound_gain(musNewGameCinematic,0,1500)
    }
    if timer = 340
    {
        if !instance_exists(objBlackRectangleTransition)
        {
            instance_create(0,0,objBlackRectangleTransition);
        }
        with objBlackRectangleTransition
        {
            roomTo = rRoomChamber;
            spd = 0.0125;
        }
        timer = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///inside chamber room
if room = rRoomChamber
{
    if timer = 350
    {
        with objChamber
        {
            sprite_index = sprChamberStarted
        }
    }
    if timer = 485
    {
        with objChamber
        {
            image_index = 0;
            image_speed = 1/3.5;
            sprite_index = sprChamberOpening;
        }
        objKidAsleep.status = objKidAsleep.AWAKE;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debug

if instance_exists(objChamber)
{
    show_debug_message(string(objChamber.sprite_index));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
